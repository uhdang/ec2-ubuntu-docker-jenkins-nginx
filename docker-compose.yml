version: '3'
services:
  master:
    build: ./jenkins-master
    ports:
      - "50000:50000"
    volumes:
      - jenkins-log:/var/log/jenkins
      - jenkins-data:/var/jenkins_home
    networks:
      - jenkins-net
  nginx:
    build: ./jenkins-nginx
    ports:
      - "80:80"
    networks:
      - jenkins-net
#    depends_on:
#      - master
  slave:
    build: ./jenkins-slave
  proxy:
    build: ./docker-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      jenkins-net:
        aliases:
          - proxy1
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - jenkins-net
volumes:
  jenkins-data:
  jenkins-log:
networks:
  jenkins-net:










#services:
#  jenkins:
#    build:
#      context: .
#    environment:
#      JENKINS_SLAVE_AGENT_PORT: "50000"
#      JAVA_OPTS: "-Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York"
#      USER: "ubuntu"                                  # $USER value
#    ports:
#      - "8080:8080"                                   # host:container
#    volumes:
#      - /home/${USER}/Jenkins:/var/jenkins_home       # Set the Jenkins home on the host machine
#      - /var/run/docker.sock:/var/run/docker.sock     # Allow the container to run Docker on Docker
